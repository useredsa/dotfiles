## Make sxhkd reload its configuration files:
super + F5
	pkill -USR1 -x sxhkd


super + z
	xdotool click 1 && notify-send works || notify-send fails

### Application Shortcuts
### ==========================

## Tiled applications
## ------------------

# Run menu
super + d
	rofi -show run -monitor -1

# Open a terminal
super + Return
	kitty

@Super_L
	bspc node --focus

super + Tab
	bspc wm -h off; \
	bspc node older.local --focus || ( \
		bspc wm -h on; \
		bspc node newest.local --focus; \
	); \
	bspc wm -h on

# super + g
# 	bspc wm -h off; \
# 	bspc node 'older.local.window.!hidden' --focus; \
# 	bspc wm -h on;

# super + y
# 	bspc wm -h off; \
# 	bspc node 'newer.local.window.!hidden' --focus; \
# 	bspc wm -h on;

super + {_,shift + }g
	{_, bspc node --to-monitor primary#next --activate;} \
	bspc desktop focused:focused --swap focused#next:focused --follow

# Open the file browser
# super + m; e
# 	( if [ "$(xprop WM_CLASS -id $(xdo id) | cut -d '"' -f 4)" = kitty ]; then \
# 		dir=a \
# 	else \
# 		dir=b \
# 	fi; \
# 	printf b$dir \
# 	) >/home/useredsa/err

# Open the audio manager
# super + v
# 	mate-volume-control -p output

## At-hand applications (scratchpad-workspace like)
## ------------------------------------------------

# Telegram
super + m; t
	bspc-toggle-visibility.sh TelegramDesktop telegram-desktop --state fullscreen

# Slack
super + m; w
	bspc-toggle-visibility.sh Slack slack --state floating --unnamed-rule

# Discord
super + m; d
	bspc-toggle-visibility.sh discord --state fullscreen

# # Spotify
# super + m; s
# 	bspc-toggle-visibility.sh spotify --state fullscreen --unnamed-rule

# Signal
super + m; s
	bspc-toggle-visibility.sh Signal signal-desktop --state fullscreen

# Terminal
super + space
	export ALTPS1='\D\{%d-%b\} \t \W ' ; bspc-toggle-visibility.sh ScratchTerm --state floating --instancename "alacritty --class ScratchTerm,Alacritty"

# Zoom Chat
super + m; c
	bspc node $(xdotool search --name Chat || printf none) --flag hidden

# Akregator
super + m; f
	bspc-toggle-visibility.sh akregator --state fullscreen

# Xournalpp
super + m; x
	bspc-toggle-visibility.sh scratch-paper "xournalpp --class=scratch-paper" --state floating

# Clipboard Manager
super + {_,shift + }y
	bspc rule --add \* --one-shot state=floating && \
	kitty clipcat-menu {insert,remove}



### Bspwm Settings
### ==============

## General
## -------

# {Quit,Restart} bspwm
super + shift + {Escape,r}
	bspc {quit,wm -r}

## Function Menus
## --------------

# Help Menu
super + {F1,question}
	/home/useredsa/.config/sxhkd/conf-parser < /home/useredsa/.config/sxhkd/sxhkdrc | \
	rofi -dmenu -p help -i -markup-rows -monitor -1 -lines 5 -columns 1 | \
	rg -o --pcre2 '\t[^\t]+(?=</small>)' | sh

# Desktops menu
super + F2
	bspc desktop $(bspc query --desktops --names | rofi -dmenu -monitor -1) --focus


# Layout Menu
super + F3
	printf "tall\nrtall\nwide\nrwide\neven\ntiled\nmonocle\n" | \
	rofi -dmenu -monitor -1 -lines 1 -columns 7 |               \
	xargs bsp-layout set

# super + F4 is close
# super + F5 is reload config

# Node flags Menu
super + F6
	bspc node --flag $(                                                          \
	printf "hidden\nsticky\nprivate\nlocked\nmarked\n" | rofi -dmenu -monitor -1 \
	)

# Status notification
super + F9
	( date; batstat ) | \
	xargs -0 notify-send -h string:x-canonical-private-synchronous:my-notification

# Edit Configuration
super + F12
	kitty kak ~/.config/bspwm/bspwmrc ~/.config/sxhkd/sxhkdrc


## Nodes
## -----

# {Focus,Swap with,Send to} an adjacent node
super + {_,shift + ,alt +}{h,j,k,l}
	bspc node {--focus,--swap,--to-node} {west,south,north,east}

# Send to an adjacent node
super + alt + {h,j,k,l}
	bspc node --to-node {west,south,north,east}

# {Close,Kill} window
super + {F4,shift + F4}
	bspc node {--close, -kill}

# Focus last node
super + Tab
	bspc node --focus last.window.local
	# rofi -show window -monitor -1 -selected-row 2                                    \
	# -kb-accept-entry '!Super-Tab,!Super+Super_L'    -kb-cancel 'Super+Escape,Escape' \
	# -kb-row-up 'Super+ISO_Left_Tab,Super+Shift+Tab' -kb-row-down 'Super+Tab'
	# https://github.com/davatorium/rofi/issues/38

# Focus the {newer,older} node in the history
super + {_,shift + ,alt + }{i,o}
	bspc wm -h off; bspc node {--focus,--swap,--to-node} {newer,older}.local; bspc wm -h on

# Set the node state
super + {t,shift + t,shift + f}
	bspc node --state {\~tiled,\~pseudo_tiled,\~floating}

# Set the node flags
super + s; {h,s,p,l,m}
	bspc node --flag {hidden,sticky,private,locked,marked}

# Set/Unset the monocle layout
super + f
	bspc desktop --layout next

# Snap floating window to the {left,right} screen border
super + {Left,Right}
	xdo move -x {0,960} -y 0 && \
	xdo resize -w $((960-2*$BSPWM_BORDER_WIDTH)) -h $((1080-2*$BSPWM_BORDER_WIDTH))

# Maximize floating window
super + Up
	xdo move -x 0 -y 0 && \
	xdo resize -w $((1920-2*$BSPWM_BORDER_WIDTH)) -h $((1080-2*$BSPWM_BORDER_WIDTH))


## Marking and receptacles
## -----------------------

# Cut the current node
super + x
	bspc node --flag marked=on --flag hidden=on

# Yank the current node
super + c
	bspc node --flag marked=on

# Paste the current node
super + v
	bspc node any.marked  --flag hidden=off -d focused --focus

# Set a preselection and try pasting window
super + ctrl + {h,j,k,l}
	bspc node --presel-dir {west,south,north,east}; \
	bspc node any.marked --flag hidden=off --to-node 'any.!automatic' --focus

# Set a preselection size and try pasting window
super + ctrl + {1-9}
	bspc node --presel-ratio 0.{0-9}; \
	bspc node any.marked --flag hidden=off --to-node 'any.!automatic' --focus

# Remove preselection/receptacles
super + ctrl + space
	bspc node --presel-dir cancel

# {Focus,Swap with,Send to} the biggest local node
super + {_,shift + ,alt + }b
	biggest=$(bspc query -N -n biggest.local); \
	focused=$(bspc query -N -n focused); \
	target=$( [ $biggest != $focused ] && printf biggest || printf last ).local; \
	bspc node {--focus,--swap,--to-node} $target

# {Focus,Swap with,Send to} the previous local window
super + {_,shift + ,alt + }p
	bspc node {--focus,--swap,--to-node} 'prev.window.local.!hidden'

# {Focus,Swap with,Send to} the next local window
super + {_,shift + ,alt + }n
	bspc node {--focus,--swap,--to-node} 'next.window.local.!hidden'

# Unhide (the newer) hidden node
super + u
	bspc node any.local.hidden.window --flag hidden --focus

# Delete receptacle
super + d
	node=$(bspc query -N -n 'any.leaf.!window'); \
	[ -n "$node" ] && bspc node "$node#@brother" -n "$node"


## Refactoring
## -----------

# Swap with brother node
super + bar
	bspc node --swap @brother

# Rotate parent node
super + r
	bspc node @parent --rotate 90

# Enter Refactoring Menu
Menu
	bspc config border_width $((BSPWM_BORDER_WIDTH+5)) && \
	xdotool key Scroll_Lock && \
	notify-send 'Refactoring Menu'

# Exit Refactoring Menu
Scroll_Lock: Menu
	bspc config border_width $BSPWM_BORDER_WIDTH && xdotool key Escape

Scroll_Lock: super + {_,shift + }{h,j,k,l}
	bspc node --{focus,swap} {west,south,north,east}

# Focus a related node
Scroll_Lock: {Left,Down,Up,Right}
	bspc node -f @{brother,first,parent,brother}

# Resize the bottom right corner
Scroll_Lock: {h,j,k,l}
	bspc node --resize bottom_right {-20 0,0 20,0 -20,20 0}

# Resize the top left corner
Scroll_Lock: shift + {h,j,k,l}
	bspc node --resize top_left {-20 0,0 20,0 -20,20 0}

# Balance nodes
Scroll_Lock: b
	bspc node --balance

# Equalize nodes
Scroll_Lock: e
	bspc node --equalize

# Rotate parent
Scroll_Lock: paren{left,right}
	bspc node @parent --rotate {-90,90}

# {Increment,Decrement} node gaps
Scroll_Lock: {minus,equal}
	bspc config window_gap $(($(bspc config window_gap) {-,+} 1))


## Desktop
## -------

# Focus last desktop
super + {grave,dead_grave}
	bspc desktop --focus; bspc desktop --focus last.local

# {Carry,Send} node to the last desktop
super + {shift,alt} + {grave,dead_grave}
	follow={--follow,--activate}; \
	bspc node -d last.local $follow

# Focus the {next,previous} desktop
super + bracket{left,right}
	bspc wm -h off; bspc desktop --focus {prev,next}.local; bspc wm -h on

# {Carry,Send} node to the {next,previous} desktop
super + {shift,alt} + bracket{left,right}
	follow={--follow,--activate}; \
	bspc node -d {prev,next}.local $follow

# Focus the given desktop
super + {1-8}
	bspc desktop -f '{1-8}'

# {Carry,Send} node to the given desktop
super + {shift,alt} + {1-8}
	follow={--follow,--activate}; \
	bspc node -d '{1-8}' $follow

# Cycle Desktop's Tree
super + {less,greater}
	bspc node @/ --circulate {backward,forward}

# {Focus,Swap with,Send to} the root node in the current desktop
super + {_,shift + ,alt + }a
	bspc node {--focus @/,--swap @/,--to-node @/ ; bspc node --swap @brother}

# Restrict selection to current node
super + semicolon
	bspc node newest.window.descendant_of --focus || \
	bspc node any.window.descendant_of --focus || \
	notify-send 'Error in sxhkd script'



## Monitor
## -------

# Focus {third,primary,second} monitor
super + {q,w,e}
	bspc monitor {primary#next#next,primary,primary#next} --focus

# {Carry,Send} node to {third,primary,second} monitor
super + {shift,alt} + {q,w,e}
	follow={--follow,--activate}; \
	bspc node focused --to-monitor {primary#next#next,primary,primary#next} $follow



### Function Keys
### ============

# Volume keys
{XF86AudioLowerVolume, XF86AudioRaiseVolume, XF86AudioMute}
	amixer sset Master {3%-,3%\+,toggle} | grep -E "[0-9]+%" | head -c -1 | \
	xargs -0 notify-send -h string:x-canonical-private-synchronous:my-notification

# Switch between audio outputs
{XF86AudioPrev, XF86AudioNext}
	nsinks=$(pactl list short sinks | wc -l) && \
	active=$(pactl list short sinks | grep RUNNING -n | cut -f 1 -d :) && \
	next=$(( (active + nsinks - 1 {-,+} 1) % nsinks + 1)) && \
	paswitch $(pactl list short sinks | head -$next | tail -1 | cut -f 1); \
	pactl list short sinks | grep RUNNING -n | cut -f 2 | \
	xargs -0 notify-send -h string:x-canonical-private-synchronous:my-notification

# Restart pulseaudio
XF86AudioPlay
	pulseaudio --kill && pulseaudio --start && \
	notify-send "PulseAudio Restarted" "You may need to restart some applications"

# Adjust Screen Brightness
{XF86MonBrightnessUp, XF86MonBrightnessDown}
	xbacklight {-inc,-dec} 10

# Print (Screenshot)
{shift + ,_}Pause
	flameshot {gui,screen -c -p ~/Pictures/}

# PrintScreen (Screenshot)
{shift + ,_}Print
	flameshot {gui,screen -c -p ~/Pictures/}

# Reset Keyboard
super + control + Return
	setxkbmap us intl

### Graphics Tablet Shortcuts
### ============

# Focus Graphics Tablet Desktop
ctrl + shift + F1
	bspc monitor HDMI-2 --focus


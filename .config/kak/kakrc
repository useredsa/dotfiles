def config -docstring %{ config: Edit kakrc } %{ edit ~/.config/kak/kakrc }
def conf-auto -override -docstring %{ conf-auto: Edit autoload files } %{
    connect-popup mkcr-fzf-files . /home/useredsa/.config/kak/autoload/
}

# Basic Configuration ─────────────────────────────────────────────────────────

# Only show update messages post v2020.19.01
set global startup_info_version 20201901
set global scrolloff 1,5
set global tabstop 4
set global grepcmd 'rg --with-filename --column'
hook global KakBegin .* %{
    set global termcmd %sh{
        for termcmd in 'kitty             sh -c' \
                       'alacritty      -e sh -c' \
                       'termite        -e      ' \
                       'urxvt          -e sh -c' \
                       'rxvt           -e sh -c' \
                       'st             -e sh -c' \
                       'xterm          -e sh -c' \
                       'roxterm        -e sh -c' \
                       'mintty         -e sh -c' \
                       'sakura         -x      ' \
                       'gnome-terminal -e      ' \
                       'xfce4-terminal -x sh -c' \
                       'konsole        -e      '; do
            terminal=${termcmd%% *}
            if command -v $terminal >/dev/null 2>&1; then
                printf %s\\n "$termcmd"
                exit
            fi
        done
    }
}


colorscheme-gruvbox-alpha

add-highlighter global/ show-matching
add-highlighter global/ number-lines
add-highlighter global/ regex '(\b|%|//|#)? ?(TODO|FIXME|XXX|NOTE)\b' 0:default+rb

define-command wraphl -params 1 -override %{
    add-highlighter -override window/wrap wrap -indent -marker … -width %sh{echo $(($1 + 1))}
    add-highlighter -override window/wrap-col column %sh{echo $(($1 + 1))} 'default,red'
}

hook global RegisterModified '"' %{
    nop %sh{
        printf %s "$kak_main_reg_dquote" | clipcatctl load
    }
}

define-command -docstring %{
  fd: open an existing file with options generated by fd.
} fd -menu -params 1 -shell-script-candidates %{
  fd . --type f --ignore-file "$kak_opt_ignored_files"
} %{
  edit %arg{1}
}

define-command fallback-open -hidden %{
  try %{
    connect fullscreen kcr-fzf-files
  } catch %{
    execute-keys '<esc>: fd '
  }
}

map global normal <c-o> ': fallback-open<ret>'

hook global WinSetOption filetype=(c|cpp|latex|markdown) %{
    wraphl 80
}

# Plugins ─────────────────────────────────────────────────────────────────────

source "%val{config}/bundle/plugins/kak-bundle/rc/kak-bundle.kak"
bundle https://codeberg.org/jdugan6240/kak-bundle

#TODO plug-old "useredsa/pager.kak" noload do %{ ln -f bin/kak-man-pager bin/kak-pager ~/.local/bin }

bundle 'https://github.com/useredsa/bspwm.kak'
bundle 'https://github.com/alexherbo2/auto-pairs.kak'
bundle 'https://github.com/andreyorst/smarttab.kak'
bundle 'https://github.com/useredsa/dynamic-matching.kak'
bundle 'https://github.com/eraserhd/kak-ansi'
bundle 'https://github.com/ul/kak-lsp'
bundle 'https://github.com/alexherbo2/batch.kak'
bundle 'https://github.com/occivink/kakoune-phantom-selection'
bundle 'https://github.com/alexherbo2/move-line.kak'
bundle 'https://gitlab.com/fsub/kakoune-mark'
bundle 'https://gitlab.com/Screwtapello/kakoune-inc-dec'
bundle 'https://github.com/h-youhei/kakoune-surround'
bundle 'https://github.com/Delapouite/kakoune-auto-percent'
bundle 'https://github.com/Delapouite/kakoune-text-objects'
bundle 'https://github.com/lePerdu/kakboard'
bundle 'https://github.com/alexherbo2/execute-key.kak'

bundle-load

require-module bspwm
alias global popup bspwm-fullscreen

set-option global auto_pairs ( ) { }

require-module smarttab
set-option global softtabstop 4
hook global WinSetOption filetype=(c|cpp|python|java|julia|rust|asciidoctor|markdown|kak|sh) expandtab
hook global WinSetOption filetype=(makefile|tsv) noexpandtab
hook global WinSetOption filetype=() smarttab

bam global '<a-;>' <a-up>   ': move-line-above<ret>'  # <a-up>   - Move line up
bam global '<a-;>' <a-down> ': move-line-below<ret>'  # <a-down> - Move line down

dynamic-matching-dmatch-conf
map global normal ) ': enter-user-mode dmatch<ret>'
map global normal ( ': enter-user-mode Dmatch<ret>'
map global user   m ': enter-user-mode -lock dmatch<ret>' -docstring "dmatch mode"
bam global '<a-;>' <F8>   ': mark-word<ret>'                             # <F8>   - Mark(highlight) word under the cursor
bam global '<a-;>' <a-F8> ': mark-pattern toggle "%val{selection}"<ret>' # <a-F8> - Mark(highlight) current selection
bam global '<a-;>' <s-F8> ': mark-clear<ret>'                            # <s-F8> - Erase mark highlighters
map global normal <plus>  ': inc-dec-modify-numbers + %val{count}<ret>'  # <plus>  - Increment number
map global normal <minus> ': inc-dec-modify-numbers - %val{count}<ret>'  # <minus> - Decrement number
unmap global object v
unmap global object d
unmap global object o
map global object a 'u' -docstring 'argument'
hook global WinCreate .* %{ kakboard-enable }
set-option global kakboard_copy_cmd "clipcatctl load"
set-option global kakboard_paste_cmd "clipcatctl get | head -c-1"

# Kak LSP ─────────────────────────────────────────────────────────────────────

# hook global WinSetOption filetype=(c|cpp|latex) lsp-enable-window
set global lsp_diagnostic_line_error_sign '║'
set global lsp_diagnostic_line_warning_sign '┊'
set global lsp_auto_highlight_references true
set global lsp_hover_anchor true
set global lsp_hover_max_lines 3
lsp-auto-hover-enable
# lsp-inlay-diagnostics-enable global
map global user l ': enter-user-mode lsp<ret>' -docstring 'Lsp mode'
map global user n ': lsp-find-error<ret>' -docstring 'Next error'

# Phantom Selections ──────────────────────────────────────────────────────────

# face global PhantomSelection "default,rgba:72637216+g"
face global PhantomSelection "%opt{alpha_fg},%opt{alpha_purple}"
define-command -docstring %{
    phantom-group: Creates a phantom group of selections
} -hidden phantom-group %{
    phantom-selection-add-selection
    map buffer normal <tab>   ': phantom-selection-iterate-next<ret>'
    map buffer insert <tab>   '<esc>: phantom-selection-iterate-next<ret>i'
    map buffer normal <s-tab> ': phantom-selection-iterate-prev<ret>'
    map buffer insert <s-tab> '<esc>: phantom-selection-iterate-prev<ret>i'
    map buffer normal <c-g>   ': phantom-ungroup<ret>'
    map buffer insert <c-g>   '<esc>: phantom-ungroup<ret>i'
}
define-command -docstring %{
    phantom-ungroup: Removes a phantom group of selections
} -hidden phantom-ungroup %{
    phantom-selection-select-all
    phantom-selection-clear
    unmap buffer normal <tab>   ': phantom-selection-iterate-next<ret>'
      map buffer insert <tab>   '<tab>'
    unmap buffer normal <s-tab> ': phantom-selection-iterate-prev<ret>'
    unmap buffer insert <s-tab> '<esc>: phantom-selection-iterate-prev<ret>i'
    unmap buffer normal <c-g>   ': phantom-ungroup<ret>'
    unmap buffer insert <c-g>   '<esc>: phantom-ungroup<ret>i'
}
map global normal <c-g> ': phantom-group<ret><space>'
map global insert <c-g> '<a-;>: phantom-group<ret><a-;><space>'

# Surround ────────────────────────────────────────────────────────────────────

declare-user-mode surround
map global surround s   ': surround<ret>'                 -docstring 'surround'
map global surround c   ': change-surround<ret>'          -docstring 'change'
map global surround d   ': delete-surround<ret>'          -docstring 'delete'
map global surround t   ': select-surrounding-tag<ret>'   -docstring 'select tag'
map global surround <"> ': surround<ret>"'                -docstring 'surround with ""'
map global surround <'> ": surround<ret>'"                -docstring "surround with ''"
map global surround <`> ': surround<ret>`'                -docstring 'surround with ``'
map global surround <(> ': surround<ret>('                -docstring 'surround with ()'
map global surround <{> ': surround<ret>{'                -docstring 'surround with {}'
map global surround <[> ': surround<ret>['                -docstring 'surround with []'
map global surround <<> ': surround<ret><'                -docstring 'surround with <>'
map global user s       ': enter-user-mode surround<ret>' -docstring 'Surround mode'

# Local kakrc ─────────────────────────────────────────────────────────────────

define-command -docstring %{
    kakrc-local: Edit local kakrc
} kakrc-local %{
    edit .kakrc.local
}

hook global BufCreate (.*/)?(\.kakrc\.local) %{
    set-option buffer filetype kak
}

hook global KakBegin .* %{
    try %{ source .kakrc.local }
}
